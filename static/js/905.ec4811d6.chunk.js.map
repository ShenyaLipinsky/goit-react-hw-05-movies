{"version":3,"file":"static/js/905.ec4811d6.chunk.js","mappings":"sNAYaA,IATUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,+HACP,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MACrB,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,QAIlB,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,OAAOE,iBAGVP,EAAAA,GAAAA,GAAH,gGACD,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,O,SCuBtC,EA9BkB,SAAC,GAAqC,IAAnCI,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACtC,OACE,SAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,QAAQ,OAAOC,cAAc,SAASZ,EAAG,EAAtD,SACGM,EAAKO,KAAI,YAAmC,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,eAAgBC,EAAW,EAAXA,KAC/B,OACE,SAACnB,EAAD,WACE,SAAC,KAAD,CACEoB,GAA0B,MAAtBT,EAASU,SAAT,iBAAsCJ,GAAtC,UAAgDA,GACpDK,MAAO,CAAEC,KAAMZ,GACfa,QAAS,kBAAMd,EAAYO,IAH7B,SAKGC,GAAkBC,KANTF,U,gIC0BxB,UA/Ba,WACX,OAAwBQ,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMhB,GAAWiB,EAAAA,EAAAA,MAejB,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEyBC,EAAAA,EAAAA,MAFzB,OAEUC,EAFV,OAGIJ,EAAQI,EAAOC,SAHnB,gDAKIC,QAAQC,IAAI,QAAZ,MALJ,0DADc,uBAAC,WAAD,wBASdC,KAEC,KAGD,UAAC,IAAD,CAAKtB,GAAG,OAAOuB,iBAAiB,WAAWjC,EAAG,EAA9C,WACE,SAAC,IAAD,CAAKU,GAAG,KAAKV,EAAG,EAAhB,6BAGA,SAAC,IAAD,CAAWM,KAAMiB,EAAMhB,YAAa2B,EAAAA,GAAgB1B,SAAUA,KAC9D,SAAC,EAAA2B,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieLIst.js","components/Pages/Home/Home.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavLink = styled(Link)`\n  padding: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.text};\n  text-decoration: underline;\n\n  &.active {\n    color: ${p => p.theme.colors.secondaryText};\n  }\n`;\nexport const NavItem = styled.li`\n  margin-bottom: ${p => p.theme.space[3]}px;\n\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n","import propTypes from 'prop-types';\n\nimport { NavLink } from 'react-router-dom';\nimport { Box } from '../Box';\nimport { NavItem } from './MovieList.styled';\n\nconst MovieList = ({ data, moreDetails, location }) => {\n  return (\n    <Box as=\"ul\" display=\"flex\" flexDirection=\"column\" p={3}>\n      {data.map(({ id, original_title, name }) => {\n        return (\n          <NavItem key={id}>\n            <NavLink\n              to={location.pathname === '/' ? `movies/${id}` : `${id}`}\n              state={{ from: location }}\n              onClick={() => moreDetails(id)}\n            >\n              {original_title || name}\n            </NavLink>\n          </NavItem>\n        );\n      })}\n    </Box>\n  );\n};\nMovieList.propTypes = {\n  moreDetails: propTypes.func.isRequired,\n  data: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n      original_title: propTypes.string,\n      name: propTypes.string,\n    })\n  ),\n};\n\nexport default MovieList;\n","import MovieList from 'components/MovieList/MovieLIst';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation } from 'react-router-dom';\nimport { Box } from '../../Box';\nimport { fetchMovieById, fetchMovies } from '../../services/API-MovieDB';\n\nconst Home = () => {\n  const [hits, setHits] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchMovieData() {\n      try {\n        const movies = await fetchMovies();\n        setHits(movies.results);\n      } catch (error) {\n        console.log('error', error);\n      }\n    }\n    fetchMovieData();\n    return;\n  }, []);\n\n  return (\n    <Box as=\"main\" gridTemplateRows=\"auto 1fr\" p={2}>\n      <Box as=\"h2\" p={3}>\n        Trending today\n      </Box>\n      <MovieList data={hits} moreDetails={fetchMovieById} location={location} />\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </Box>\n  );\n};\n\nexport default Home;\n"],"names":["NavItem","styled","Link","p","theme","space","colors","text","secondaryText","data","moreDetails","location","Box","as","display","flexDirection","map","id","original_title","name","to","pathname","state","from","onClick","useState","hits","setHits","useLocation","useEffect","fetchMovies","movies","results","console","log","fetchMovieData","gridTemplateRows","fetchMovieById","Suspense","fallback"],"sourceRoot":""}