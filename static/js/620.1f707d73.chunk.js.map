{"version":3,"file":"static/js/620.1f707d73.chunk.js","mappings":"sNAYaA,IATUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,+HACP,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,MACrB,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,QAIlB,SAAAJ,GAAC,OAAIA,EAAEC,MAAME,OAAOE,iBAGVP,EAAAA,GAAAA,GAAH,gGACD,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,MAAM,O,SCWtC,EApBkB,SAAC,GAAqC,IAAnCI,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACtC,OACE,SAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,QAAQ,OAAOC,cAAc,SAASZ,EAAG,EAAtD,SACGM,EAAKO,KAAI,YAAmC,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,eAAgBC,EAAW,EAAXA,KAC/B,OACE,SAACnB,EAAD,WACE,SAAC,KAAD,CACEoB,GAA0B,MAAtBT,EAASU,SAAT,iBAAsCJ,GAAtC,UAAgDA,GACpDK,MAAO,CAAEC,KAAMZ,GACfa,QAAS,kBAAMd,EAAYO,IAH7B,SAKGC,GAAkBC,KANTF,U,sHCPXQ,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,GAA0BC,EAAAA,EAAAA,UAASF,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,OACE,kBACEH,SAAU,SAAAI,GACRA,EAAEC,iBACFL,EAASE,IAHb,WAME,kBACEI,KAAK,OACLP,MAAOG,IAAUH,EAAQA,EAAQG,EACjCK,SAAU,SAAAH,GAAC,OAAID,EAASC,EAAEI,OAAOT,WAEnC,mBAAQO,KAAK,SAAb,wB,oBCyBN,EAnCe,WAAO,IAAD,EACbtB,GAAWyB,EAAAA,EAAAA,MACjB,GAAwCR,EAAAA,EAAAA,UAAS,IAAjD,eAAOS,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAEhDC,EAAAA,EAAAA,YAAU,WACW,KAAfF,IAGJG,EAAAA,EAAAA,IAAaH,GAAYI,KAAKR,KAC7B,CAACI,IAKJ,OACE,6BACE,SAACjB,EAAD,CAAWC,MAAOgB,EAAYf,SANR,SAAAD,GACxBe,EAA0B,KAAVf,EAAe,CAAEqB,MAAOrB,GAAU,OAM/CW,EAAaW,OAAS,IACrB,iCACE,SAAC,IAAD,CACEvC,KAAM4B,EACN3B,YAAauC,EAAAA,GACbtC,SAAUA,EACVW,MAAO,CAAEC,KAAMZ,MAEjB,SAAC,EAAAuC,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieLIst.js","components/Pages/SearchBox/SearchBox.js","components/Pages/Movies/Movies.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const NavLink = styled(Link)`\n  padding: ${p => p.theme.space[3]}px;\n  color: ${p => p.theme.colors.text};\n  text-decoration: underline;\n\n  &.active {\n    color: ${p => p.theme.colors.secondaryText};\n  }\n`;\nexport const NavItem = styled.li`\n  margin-bottom: ${p => p.theme.space[3]}px;\n\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport { Box } from '../Box';\nimport { NavItem } from './MovieList.styled';\n\nconst MovieList = ({ data, moreDetails, location }) => {\n  return (\n    <Box as=\"ul\" display=\"flex\" flexDirection=\"column\" p={3}>\n      {data.map(({ id, original_title, name }) => {\n        return (\n          <NavItem key={id}>\n            <NavLink\n              to={location.pathname === '/' ? `movies/${id}` : `${id}`}\n              state={{ from: location }}\n              onClick={() => moreDetails(id)}\n            >\n              {original_title || name}\n            </NavLink>\n          </NavItem>\n        );\n      })}\n    </Box>\n  );\n};\n\nexport default MovieList;\n","import { useState } from 'react';\n\nexport const SearchBox = ({ value, onSubmit }) => {\n  const [queue, setQueue] = useState(value);\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        onSubmit(queue);\n      }}\n    >\n      <input\n        type=\"text\"\n        value={queue === value ? value : queue}\n        onChange={e => setQueue(e.target.value)}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport { SearchBox } from '../SearchBox/SearchBox';\nimport { fetchMovieById, searchMovies } from 'components/services/API-MovieDB';\nimport MovieList from 'components/MovieList/MovieLIst';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [foundedFilms, setFoundedFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queueParam = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (queueParam === '') {\n      return;\n    }\n    searchMovies(queueParam).then(setFoundedFilms);\n  }, [queueParam]);\n  const changeSearchValue = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <main>\n      <SearchBox value={queueParam} onSubmit={changeSearchValue} />\n      {foundedFilms.length > 0 && (\n        <>\n          <MovieList\n            data={foundedFilms}\n            moreDetails={fetchMovieById}\n            location={location}\n            state={{ from: location }}\n          />\n          <Suspense fallback={null}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["NavItem","styled","Link","p","theme","space","colors","text","secondaryText","data","moreDetails","location","Box","as","display","flexDirection","map","id","original_title","name","to","pathname","state","from","onClick","SearchBox","value","onSubmit","useState","queue","setQueue","e","preventDefault","type","onChange","target","useLocation","foundedFilms","setFoundedFilms","useSearchParams","searchParams","setSearchParams","queueParam","get","useEffect","searchMovies","then","query","length","fetchMovieById","Suspense","fallback"],"sourceRoot":""}