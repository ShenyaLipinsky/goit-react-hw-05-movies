{"version":3,"file":"static/js/620.846794f2.chunk.js","mappings":"wOAEaA,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACjC,GAA0BC,EAAAA,EAAAA,UAASF,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,OACE,kBACEH,SAAU,SAAAI,GACRA,EAAEC,iBACFL,EAASE,IAHb,WAME,kBACEI,KAAK,OACLP,MAAOG,IAAUH,EAAQA,EAAQG,EACjCK,SAAU,SAAAH,GAAC,OAAID,EAASC,EAAEI,OAAOT,WAEnC,mBAAQO,KAAK,SAAb,wB,oBCyBN,EAnCe,WAAO,IAAD,EACbG,GAAWC,EAAAA,EAAAA,MACjB,GAAwCT,EAAAA,EAAAA,UAAS,IAAjD,eAAOU,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAU,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAEhDC,EAAAA,EAAAA,YAAU,WACW,KAAfF,IAGJG,EAAAA,EAAAA,IAAaH,GAAYI,KAAKR,KAC7B,CAACI,IAKJ,OACE,6BACE,SAAClB,EAAD,CAAWC,MAAOiB,EAAYhB,SANR,SAAAD,GACxBgB,EAA0B,KAAVhB,EAAe,CAAEsB,MAAOtB,GAAU,OAM/CY,EAAaW,OAAS,IACrB,iCACE,SAAC,IAAD,CACEC,KAAMZ,EACNa,YAAaC,EAAAA,GACbhB,SAAUA,EACViB,MAAO,CAAEC,KAAMlB,MAEjB,SAAC,EAAAmB,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD","sources":["components/Pages/SearchBox/SearchBox.js","components/Pages/Movies/Movies.js"],"sourcesContent":["import { useState } from 'react';\n\nexport const SearchBox = ({ value, onSubmit }) => {\n  const [queue, setQueue] = useState(value);\n  return (\n    <form\n      onSubmit={e => {\n        e.preventDefault();\n        onSubmit(queue);\n      }}\n    >\n      <input\n        type=\"text\"\n        value={queue === value ? value : queue}\n        onChange={e => setQueue(e.target.value)}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useSearchParams } from 'react-router-dom';\nimport { SearchBox } from '../SearchBox/SearchBox';\nimport { fetchMovieById, searchMovies } from 'components/services/API-MovieDB';\nimport MovieList from 'components/MovieList/MovieLIst';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [foundedFilms, setFoundedFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queueParam = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (queueParam === '') {\n      return;\n    }\n    searchMovies(queueParam).then(setFoundedFilms);\n  }, [queueParam]);\n  const changeSearchValue = value => {\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <main>\n      <SearchBox value={queueParam} onSubmit={changeSearchValue} />\n      {foundedFilms.length > 0 && (\n        <>\n          <MovieList\n            data={foundedFilms}\n            moreDetails={fetchMovieById}\n            location={location}\n            state={{ from: location }}\n          />\n          <Suspense fallback={null}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["SearchBox","value","onSubmit","useState","queue","setQueue","e","preventDefault","type","onChange","target","location","useLocation","foundedFilms","setFoundedFilms","useSearchParams","searchParams","setSearchParams","queueParam","get","useEffect","searchMovies","then","query","length","data","moreDetails","fetchMovieById","state","from","Suspense","fallback"],"sourceRoot":""}